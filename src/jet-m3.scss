@use '@angular/material' as mat;

$jet-font-default: ('Noto Sans', sans-serif);
$jet-font-noto-sans-arabic: ('Noto Sans Arabic', 'Noto Sans', sans-serif);

html {
  @include mat.theme(
    (
      // Generate custom palette using `ng generate @angular/material:theme-color`
      color: (
          primary: mat.$spring-green-palette,
          tertiary: mat.$violet-palette,
          theme-type: color-scheme
        ),
      typography: (
        plain-family: $jet-font-default,
        brand-family: $jet-font-default,
        bold-weight: 700,
        medium-weight: 500,
        regular-weight: 400
      ),
      density: 0
    )
  );

  @include mat.card-overrides(
    (
      elevated-container-elevation: var(--mat-sys-level0),
    )
  );

  @include mat.list-overrides(
    (
      active-indicator-shape: var(--mat-sys-corner-small),
      list-item-container-shape: var(--mat-sys-corner-small),
      list-item-leading-icon-color: var(--mat-sys-outline),
      list-item-one-line-container-height: 56px,
      list-item-supporting-text-color: var(--mat-sys-outline),
      list-item-two-line-container-height: 74px,
    )
  );

  @include mat.sidenav-overrides(
    (
      container-background-color: var(--mat-sys-surface-container-low),
    )
  );

  @include mat.tabs-overrides(
    (
      background-color: var(--mat-sys-primary),
      foreground-color: var(--mat-sys-on-primary),
    )
  );
}

body {
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font-family: $jet-font-default;
  margin: 0;

  &.jet-font-noto-sans-arabic {
    @include mat.theme(
      (
        typography: (
          plain-family: $jet-font-noto-sans-arabic,
          brand-family: $jet-font-noto-sans-arabic,
          bold-weight: 700,
          medium-weight: 500,
          regular-weight: 400,
        ),
      )
    );
  }

  &.jet-theme-dark {
    color-scheme: dark;
  }

  &.jet-theme-light {
    color-scheme: light;
  }

  .jet-sidenav-container {
    &[dir='ltr'] {
      .jet-sidenav {
        @include mat.sidenav-overrides(
          (
            container-width: calc(240px + env(safe-area-inset-left)),
          )
        );

        .jet-sidenav-toolbar,
        .jet-sidenav-content {
          padding: 0 16px 0 calc(16px + env(safe-area-inset-left));
        }
      }

      .jet-content {
        .jet-content-toolbar {
          padding: 0 calc(16px + env(safe-area-inset-right)) 0 16px;

          &.jet-sidenav-closed {
            padding: 0 calc(16px + env(safe-area-inset-right)) 0
              calc(16px + env(safe-area-inset-left));
          }
        }

        main {
          padding: 16px calc(16px + env(safe-area-inset-right)) 16px 16px;

          &.jet-sidenav-closed {
            padding: 16px calc(16px + env(safe-area-inset-right)) 16px
              calc(16px + env(safe-area-inset-left));
          }
        }

        .jet-tab-nav-bar {
          .mat-mdc-tab-header-pagination-before {
            padding-left: calc(env(safe-area-inset-left) + 4px);
          }

          .mat-mdc-tab-header-pagination-after {
            padding-right: calc(env(safe-area-inset-right) + 4px);
          }
        }
      }
    }

    &[dir='rtl'] {
      .jet-sidenav {
        @include mat.sidenav-overrides(
          (
            container-width: calc(240px + env(safe-area-inset-right)),
          )
        );

        .jet-sidenav-toolbar,
        .jet-sidenav-content {
          padding: 0 calc(16px + env(safe-area-inset-right)) 0 16px;
        }
      }

      .jet-content {
        .jet-content-toolbar {
          padding: 0 16px 0 calc(16px + env(safe-area-inset-left));

          &.jet-sidenav-closed {
            padding: 0 calc(16px + env(safe-area-inset-right)) 0
              calc(16px + env(safe-area-inset-left));
          }
        }

        main {
          padding: 16px 16px 16px calc(16px + env(safe-area-inset-left));

          &.jet-sidenav-closed {
            padding: 16px calc(16px + env(safe-area-inset-right)) 16px
              calc(16px + env(safe-area-inset-left));
          }
        }

        .jet-tab-nav-bar {
          .mat-mdc-tab-header-pagination-before {
            padding-right: calc(env(safe-area-inset-right) + 4px);
          }

          .mat-mdc-tab-header-pagination-after {
            padding-left: calc(env(safe-area-inset-left) + 4px);
          }
        }
      }
    }

    .jet-sidenav {
      padding: env(safe-area-inset-top) 0 env(safe-area-inset-bottom) 0;

      .jet-sidenav-toolbar {
        justify-content: center;

        @include mat.toolbar-overrides(
          (
            container-background-color: var(--mat-sys-surface-container-low),
          )
        );
      }
    }

    .jet-content {
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
      padding-top: env(safe-area-inset-top);

      .jet-content-toolbar {
        overflow-x: auto;
        position: relative;
      }

      .jet-tab-nav-bar {
        bottom: 0;
        left: 0;
        position: fixed;
        right: 0;
        z-index: 2;

        .mat-mdc-tab-link-container {
          border-bottom: none;
          padding-bottom: env(safe-area-inset-bottom);
        }
      }
    }
  }
}

.mat-icon {
  font-variation-settings: 'FILL' 1;
}

.mat-mdc-snack-bar-container {
  margin: calc(8px + env(safe-area-inset-top))
    calc(8px + env(safe-area-inset-right))
    calc(8px + env(safe-area-inset-bottom))
    calc(8px + env(safe-area-inset-left)) !important;
}
