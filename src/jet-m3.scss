@use '@angular/material' as mat;
@use 'sass:map';

$jet-font-default: ('Noto Sans', sans-serif);
$jet-font-noto-sans-arabic: ('Noto Sans Arabic', 'Noto Sans', sans-serif);

// Generate custom palette using `ng generate @angular/material:theme-color`

// Note: Color palettes are generated from primary: #74564a
$_palettes: (
  primary: (
    0: #000000,
    10: #2b160d,
    20: #432a20,
    25: #4f352b,
    30: #5c4035,
    35: #694c40,
    40: #76584b,
    50: #907063,
    60: #ac897b,
    70: #c8a395,
    80: #e5beaf,
    90: #ffdbcd,
    95: #ffede7,
    98: #fff8f6,
    99: #fffbff,
    100: #ffffff,
  ),
  secondary: (
    0: #000000,
    10: #241915,
    20: #3a2e29,
    25: #463833,
    30: #52443e,
    35: #5e4f49,
    40: #6b5b55,
    50: #85736d,
    60: #9f8d86,
    70: #bba7a0,
    80: #d7c2bb,
    90: #f4ded6,
    95: #ffede7,
    98: #fff8f6,
    99: #fffbff,
    100: #ffffff,
  ),
  tertiary: (
    0: #000000,
    10: #1f1c06,
    20: #353118,
    25: #403c22,
    30: #4c472d,
    35: #585338,
    40: #645f43,
    50: #7d785a,
    60: #979172,
    70: #b2ac8b,
    80: #cec7a5,
    90: #ebe3bf,
    95: #f9f1cd,
    98: #fff9e9,
    99: #fffbff,
    100: #ffffff,
  ),
  neutral: (
    0: #000000,
    10: #1e1b1a,
    20: #33302e,
    25: #3f3a39,
    30: #4a4644,
    35: #565150,
    40: #625d5c,
    50: #7b7674,
    60: #958f8e,
    70: #b0aaa8,
    80: #ccc5c3,
    90: #e9e1df,
    95: #f7efed,
    98: #fff8f6,
    99: #fffbff,
    100: #ffffff,
    4: #100e0d,
    6: #161312,
    12: #221f1e,
    17: #2d2928,
    22: #383433,
    24: #3c3837,
    87: #e0d8d6,
    92: #eee6e4,
    94: #f4ecea,
    96: #faf2ef,
  ),
  neutral-variant: (
    0: #000000,
    10: #221a16,
    20: #382e2a,
    25: #443935,
    30: #504440,
    35: #5c504b,
    40: #685c57,
    50: #82746f,
    60: #9c8e88,
    70: #b8a8a2,
    80: #d4c3bd,
    90: #f0dfd9,
    95: #ffede7,
    98: #fff8f6,
    99: #fffbff,
    100: #ffffff,
  ),
  error: (
    0: #000000,
    10: #410002,
    20: #690005,
    25: #7e0007,
    30: #93000a,
    35: #a80710,
    40: #ba1a1a,
    50: #de3730,
    60: #ff5449,
    70: #ff897d,
    80: #ffb4ab,
    90: #ffdad6,
    95: #ffedea,
    98: #fff8f7,
    99: #fffbff,
    100: #ffffff,
  ),
);

$_rest: (
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes, neutral-variant),
  error: map.get($_palettes, error),
);

$primary-palette: map.merge(map.get($_palettes, primary), $_rest);
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);

:root {
  @include mat.theme(
    (
      color: (
        primary: $primary-palette,
        tertiary: $tertiary-palette,
        theme-type: color-scheme,
      ),
      typography: (
        plain-family: $jet-font-default,
        brand-family: $jet-font-default,
        bold-weight: 700,
        medium-weight: 500,
        regular-weight: 400,
      ),
      density: 0,
    )
  );

  @include mat.card-overrides(
    (
      elevated-container-elevation: var(--mat-sys-level0),
    )
  );

  @include mat.list-overrides(
    (
      active-indicator-shape: var(--mat-sys-corner-small),
      list-item-container-shape: var(--mat-sys-corner-small),
      list-item-leading-icon-color: var(--mat-sys-outline),
      list-item-one-line-container-height: 56px,
      list-item-supporting-text-color: var(--mat-sys-outline),
      list-item-two-line-container-height: 74px,
    )
  );

  @include mat.sidenav-overrides(
    (
      container-background-color: var(--mat-sys-surface-container-low),
    )
  );

  @include mat.tabs-overrides(
    (
      background-color: var(--mat-sys-primary),
      foreground-color: var(--mat-sys-on-primary),
    )
  );
}

body {
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font-family: $jet-font-default;
  margin: 0;

  &.jet-font-noto-sans-arabic {
    @include mat.theme(
      (
        typography: (
          plain-family: $jet-font-noto-sans-arabic,
          brand-family: $jet-font-noto-sans-arabic,
          bold-weight: 700,
          medium-weight: 500,
          regular-weight: 400,
        ),
      )
    );
  }

  &.jet-theme-dark {
    color-scheme: dark;
  }

  &.jet-theme-light {
    color-scheme: light;
  }

  .jet-sidenav-container {
    &[dir='ltr'] {
      .jet-sidenav {
        @include mat.sidenav-overrides(
          (
            container-width: calc(240px + env(safe-area-inset-left)),
          )
        );

        .jet-sidenav-toolbar,
        .jet-sidenav-content {
          padding: 0 16px 0 calc(16px + env(safe-area-inset-left));
        }
      }

      .jet-content {
        .jet-content-toolbar {
          padding: 0 calc(16px + env(safe-area-inset-right)) 0 16px;

          &.jet-sidenav-closed {
            padding: 0 calc(16px + env(safe-area-inset-right)) 0
              calc(16px + env(safe-area-inset-left));
          }
        }

        main {
          padding: 16px calc(16px + env(safe-area-inset-right)) 16px 16px;

          &.jet-sidenav-closed {
            padding: 16px calc(16px + env(safe-area-inset-right)) 16px
              calc(16px + env(safe-area-inset-left));
          }
        }

        .jet-tab-nav-bar {
          .mat-mdc-tab-header-pagination-before {
            padding-left: calc(env(safe-area-inset-left) + 4px);
          }

          .mat-mdc-tab-header-pagination-after {
            padding-right: calc(env(safe-area-inset-right) + 4px);
          }
        }
      }
    }

    &[dir='rtl'] {
      .jet-sidenav {
        @include mat.sidenav-overrides(
          (
            container-width: calc(240px + env(safe-area-inset-right)),
          )
        );

        .jet-sidenav-toolbar,
        .jet-sidenav-content {
          padding: 0 calc(16px + env(safe-area-inset-right)) 0 16px;
        }
      }

      .jet-content {
        .jet-content-toolbar {
          padding: 0 16px 0 calc(16px + env(safe-area-inset-left));

          &.jet-sidenav-closed {
            padding: 0 calc(16px + env(safe-area-inset-right)) 0
              calc(16px + env(safe-area-inset-left));
          }
        }

        main {
          padding: 16px 16px 16px calc(16px + env(safe-area-inset-left));

          &.jet-sidenav-closed {
            padding: 16px calc(16px + env(safe-area-inset-right)) 16px
              calc(16px + env(safe-area-inset-left));
          }
        }

        .jet-tab-nav-bar {
          .mat-mdc-tab-header-pagination-before {
            padding-right: calc(env(safe-area-inset-right) + 4px);
          }

          .mat-mdc-tab-header-pagination-after {
            padding-left: calc(env(safe-area-inset-left) + 4px);
          }
        }
      }
    }

    .jet-sidenav {
      padding: env(safe-area-inset-top) 0 env(safe-area-inset-bottom) 0;

      .jet-sidenav-toolbar {
        justify-content: center;

        @include mat.toolbar-overrides(
          (
            container-background-color: var(--mat-sys-surface-container-low),
          )
        );
      }
    }

    .jet-content {
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
      padding-top: env(safe-area-inset-top);

      .jet-content-toolbar {
        overflow-x: auto;
        position: relative;
      }

      .jet-tab-nav-bar {
        bottom: 0;
        left: 0;
        position: fixed;
        right: 0;
        z-index: 2;

        .mat-mdc-tab-link-container {
          border-bottom: none;
          padding-bottom: env(safe-area-inset-bottom);
        }
      }
    }
  }
}

.mat-icon {
  font-variation-settings: 'FILL' 1;
}

.mat-mdc-card {
  overflow: hidden;
  .mat-mdc-card-actions {
    gap: 8px;
  }
}

.mat-mdc-form-field {
  width: 100%;
}

.mat-mdc-snack-bar-container {
  margin: calc(8px + env(safe-area-inset-top))
    calc(8px + env(safe-area-inset-right))
    calc(8px + env(safe-area-inset-bottom))
    calc(8px + env(safe-area-inset-left)) !important;
}
